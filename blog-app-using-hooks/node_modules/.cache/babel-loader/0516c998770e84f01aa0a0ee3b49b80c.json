{"ast":null,"code":"export function validations(errors, name, value) {\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  function validatePassword(value) {\n    if (!value) {\n      return 'Password is required';\n    } else if (value.length < 6) {\n      return 'Password must be alteast 6 characters long';\n    } else if (value.search(/[a-zA-Z]/) === -1) {\n      return 'Password must contain atleast one letter';\n    } else if (value.search(/\\d/) === -1) {\n      return 'Password must contain atleast one number';\n    } else {\n      return '';\n    }\n  }\n\n  switch (name) {\n    case 'username':\n      errors.username = !value ? 'username is required' : value.length < 6 ? 'username should be atleast 6 characters' : '';\n      break;\n\n    case 'password':\n      errors.password = validatePassword(value);\n      break;\n\n    case 'email':\n      errors.email = !value ? 'email is required' : validateEmail(value) ? '' : 'Email is invalid';\n      break;\n\n    default:\n      break;\n  }\n}","map":{"version":3,"sources":["/Users/rishabh/Documents/Blog_App_using_Hooks/src/utilities/validations.js"],"names":["validations","errors","name","value","validateEmail","email","re","test","validatePassword","length","search","username","password"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,KAAnC,EAA0C;AAE/C,WAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,UAAMC,EAAE,GACN,uJADF;AAEA,WAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP;AACD;;AAED,WAASG,gBAAT,CAA0BL,KAA1B,EAAiC;AAC/B,QAAI,CAACA,KAAL,EAAY;AACV,aAAO,sBAAP;AACD,KAFD,MAEO,IAAIA,KAAK,CAACM,MAAN,GAAe,CAAnB,EAAsB;AAC3B,aAAO,4CAAP;AACD,KAFM,MAEA,IAAIN,KAAK,CAACO,MAAN,CAAa,UAAb,MAA6B,CAAC,CAAlC,EAAqC;AAC1C,aAAO,0CAAP;AACD,KAFM,MAEA,IAAIP,KAAK,CAACO,MAAN,CAAa,IAAb,MAAuB,CAAC,CAA5B,EAA+B;AACpC,aAAO,0CAAP;AACD,KAFM,MAEA;AACL,aAAO,EAAP;AACD;AACF;;AAED,UAAQR,IAAR;AACE,SAAK,UAAL;AACED,MAAAA,MAAM,CAACU,QAAP,GAAkB,CAACR,KAAD,GACd,sBADc,GAEdA,KAAK,CAACM,MAAN,GAAe,CAAf,GACA,yCADA,GAEA,EAJJ;AAKA;;AACF,SAAK,UAAL;AACER,MAAAA,MAAM,CAACW,QAAP,GAAkBJ,gBAAgB,CAACL,KAAD,CAAlC;AACA;;AACF,SAAK,OAAL;AACEF,MAAAA,MAAM,CAACI,KAAP,GAAe,CAACF,KAAD,GACX,mBADW,GAEXC,aAAa,CAACD,KAAD,CAAb,GACA,EADA,GAEA,kBAJJ;AAKA;;AACF;AACE;AAnBJ;AAqBD","sourcesContent":["export function validations(errors, name, value) {\n  \n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  function validatePassword(value) {\n    if (!value) {\n      return 'Password is required';\n    } else if (value.length < 6) {\n      return 'Password must be alteast 6 characters long';\n    } else if (value.search(/[a-zA-Z]/) === -1) {\n      return 'Password must contain atleast one letter';\n    } else if (value.search(/\\d/) === -1) {\n      return 'Password must contain atleast one number';\n    } else {\n      return '';\n    }\n  }\n\n  switch (name) {\n    case 'username':\n      errors.username = !value\n        ? 'username is required'\n        : value.length < 6\n        ? 'username should be atleast 6 characters'\n        : '';\n      break;\n    case 'password':\n      errors.password = validatePassword(value);\n      break;\n    case 'email':\n      errors.email = !value\n        ? 'email is required'\n        : validateEmail(value)\n        ? ''\n        : 'Email is invalid';\n      break;\n    default:\n      break;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}