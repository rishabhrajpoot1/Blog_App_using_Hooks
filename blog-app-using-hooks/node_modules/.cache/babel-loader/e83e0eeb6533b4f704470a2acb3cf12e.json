{"ast":null,"code":"export function validations(errors,name,value){function validateEmail(email){var re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return re.test(email);}function validatePassword(value){if(!value){return'Password is required';}else if(value.length<6){return'Password must be alteast 6 characters long';}else if(value.search(/[a-zA-Z]/)===-1){return'Password must contain atleast one letter';}else if(value.search(/\\d/)===-1){return'Password must contain atleast one number';}else{return'';}}switch(name){case'username':errors.username=!value?'username is required':value.length<6?'username should be atleast 6 characters':'';break;case'password':errors.password=validatePassword(value);break;case'email':errors.email=!value?'email is required':validateEmail(value)?'':'Email is invalid';break;default:break;}}","map":{"version":3,"sources":["/Users/rishabh/Desktop/AltCampus/Advanced React/Blog_App_using_Hooks/blog-app-using-hooks/src/utilities/validations.js"],"names":["validations","errors","name","value","validateEmail","email","re","test","validatePassword","length","search","username","password"],"mappings":"AAAA,MAAO,SAASA,CAAAA,WAAT,CAAqBC,MAArB,CAA6BC,IAA7B,CAAmCC,KAAnC,CAA0C,CAE/C,QAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CAC5B,GAAMC,CAAAA,EAAE,CACN,uJADF,CAEA,MAAOA,CAAAA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP,CACD,CAED,QAASG,CAAAA,gBAAT,CAA0BL,KAA1B,CAAiC,CAC/B,GAAI,CAACA,KAAL,CAAY,CACV,MAAO,sBAAP,CACD,CAFD,IAEO,IAAIA,KAAK,CAACM,MAAN,CAAe,CAAnB,CAAsB,CAC3B,MAAO,4CAAP,CACD,CAFM,IAEA,IAAIN,KAAK,CAACO,MAAN,CAAa,UAAb,IAA6B,CAAC,CAAlC,CAAqC,CAC1C,MAAO,0CAAP,CACD,CAFM,IAEA,IAAIP,KAAK,CAACO,MAAN,CAAa,IAAb,IAAuB,CAAC,CAA5B,CAA+B,CACpC,MAAO,0CAAP,CACD,CAFM,IAEA,CACL,MAAO,EAAP,CACD,CACF,CAED,OAAQR,IAAR,EACE,IAAK,UAAL,CACED,MAAM,CAACU,QAAP,CAAkB,CAACR,KAAD,CACd,sBADc,CAEdA,KAAK,CAACM,MAAN,CAAe,CAAf,CACA,yCADA,CAEA,EAJJ,CAKA,MACF,IAAK,UAAL,CACER,MAAM,CAACW,QAAP,CAAkBJ,gBAAgB,CAACL,KAAD,CAAlC,CACA,MACF,IAAK,OAAL,CACEF,MAAM,CAACI,KAAP,CAAe,CAACF,KAAD,CACX,mBADW,CAEXC,aAAa,CAACD,KAAD,CAAb,CACA,EADA,CAEA,kBAJJ,CAKA,MACF,QACE,MAnBJ,CAqBD","sourcesContent":["export function validations(errors, name, value) {\n  \n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  function validatePassword(value) {\n    if (!value) {\n      return 'Password is required';\n    } else if (value.length < 6) {\n      return 'Password must be alteast 6 characters long';\n    } else if (value.search(/[a-zA-Z]/) === -1) {\n      return 'Password must contain atleast one letter';\n    } else if (value.search(/\\d/) === -1) {\n      return 'Password must contain atleast one number';\n    } else {\n      return '';\n    }\n  }\n\n  switch (name) {\n    case 'username':\n      errors.username = !value\n        ? 'username is required'\n        : value.length < 6\n        ? 'username should be atleast 6 characters'\n        : '';\n      break;\n    case 'password':\n      errors.password = validatePassword(value);\n      break;\n    case 'email':\n      errors.email = !value\n        ? 'email is required'\n        : validateEmail(value)\n        ? ''\n        : 'Email is invalid';\n      break;\n    default:\n      break;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}