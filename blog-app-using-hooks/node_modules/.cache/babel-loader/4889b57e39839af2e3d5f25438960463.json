{"ast":null,"code":"var _jsxFileName = \"/Users/rishabh/Documents/Blog_App_using_Hooks/src/components/New-Article.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Articles_URL, Local_Storage_Key } from '../utilities/constants';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite'; // import style manually\n\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewArticle(props) {\n  _s();\n\n  const [state, setState] = useState({\n    title: '',\n    description: '',\n    tags: '',\n    body: '',\n    error: ''\n  });\n\n  function handleChange({\n    target\n  }) {\n    let {\n      name,\n      value\n    } = target;\n    setState({ ...state,\n      [name]: value\n    });\n  }\n\n  function handleSubmit(event) {\n    let {\n      title,\n      description,\n      tags,\n      body\n    } = state;\n    tags = tags.split(',').map(tag => tag.trim());\n    let token = localStorage[Local_Storage_Key];\n    event.preventDefault();\n\n    if (title && description && tags && body) {\n      fetch(Articles_URL, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          article: {\n            title,\n            description,\n            tagList: tags,\n            body\n          }\n        })\n      }).then(res => {\n        if (!res.ok) {\n          return res.json().then(({\n            errors\n          }) => {\n            return Promise.reject(errors);\n          });\n        }\n\n        return res.json();\n      }).then(data => {\n        // console.log(data);\n        props.history.push(`/articles/${data.article.slug}`);\n      }).catch(err => {\n        // console.log(err);\n        setState({ ...state,\n          error: 'Enter all fields'\n        });\n      });\n    } else {\n      setState({\n        title: '',\n        description: '',\n        body: '',\n        tags: '',\n        error: ''\n      });\n    }\n  }\n\n  function handleEditorChange({\n    html,\n    text\n  }) {\n    setState({ ...state,\n      body: text\n    });\n  }\n\n  function clearEditor({\n    html,\n    text\n  }) {\n    return html = '';\n  }\n\n  const mdParser = new MarkdownIt();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"w-2/4 mx-auto mt-10\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"block w-full my-3 py-2 px-3 border border-gray-400 rounded-md\",\n          type: \"text\",\n          placeholder: \"Enter Title\",\n          value: state.title,\n          name: \"title\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"block w-full my-3 py-2 px-3 border border-gray-400 rounded-md\",\n          type: \"text\",\n          placeholder: \"Enter Description\",\n          value: state.description,\n          name: \"description\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"block w-full my-3 py-2 px-3 border border-gray-400 rounded-md\",\n          type: \"text\",\n          placeholder: \"Enter Tags\",\n          value: state.tags,\n          name: \"tags\",\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: '500px'\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: handleEditorChange,\n          onSubmit: clearEditor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Publish Article\",\n          className: \"block float-right btn bg-green-500 text-white font-bold cursor-pointer mt-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewArticle, \"ggqU6DMWV0Ux0gDTKl5BUsT3fm4=\");\n\n_c = NewArticle;\nexport default _c2 = withRouter(NewArticle);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewArticle\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/rishabh/Documents/Blog_App_using_Hooks/src/components/New-Article.js"],"names":["React","useState","withRouter","Articles_URL","Local_Storage_Key","MarkdownIt","MdEditor","NewArticle","props","state","setState","title","description","tags","body","error","handleChange","target","name","value","handleSubmit","event","split","map","tag","trim","token","localStorage","preventDefault","fetch","method","headers","authorization","JSON","stringify","article","tagList","then","res","ok","json","errors","Promise","reject","data","history","push","slug","catch","err","handleEditorChange","html","text","clearEditor","mdParser","e","height","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Articles_URL, Local_Storage_Key } from '../utilities/constants';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\n// import style manually\nimport 'react-markdown-editor-lite/lib/index.css';\n\nfunction NewArticle(props) {\n  const [state, setState] = useState({\n    title: '',\n    description: '',\n    tags: '',\n    body: '',\n    error: '',\n  });\n  function handleChange({ target }) {\n    let { name, value } = target;\n    setState({ ...state, [name]: value });\n  }\n\n  function handleSubmit(event) {\n    let { title, description, tags, body } = state;\n    tags = tags.split(',').map((tag) => tag.trim());\n    let token = localStorage[Local_Storage_Key];\n    event.preventDefault();\n    if (title && description && tags && body) {\n      fetch(Articles_URL, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n          article: { title, description, tagList: tags, body },\n        }),\n      })\n        .then((res) => {\n          if (!res.ok) {\n            return res.json().then(({ errors }) => {\n              return Promise.reject(errors);\n            });\n          }\n          return res.json();\n        })\n        .then((data) => {\n          // console.log(data);\n          props.history.push(`/articles/${data.article.slug}`);\n        })\n        .catch((err) => {\n          // console.log(err);\n          setState({\n            ...state,\n            error: 'Enter all fields',\n          });\n        });\n    } else {\n      setState({\n        title: '',\n        description: '',\n        body: '',\n        tags: '',\n        error: '',\n      });\n    }\n  }\n  function handleEditorChange({ html, text }) {\n    setState({ ...state, body: text });\n  }\n  function clearEditor({ html, text }) {\n    return (html = '');\n  }\n\n  const mdParser = new MarkdownIt();\n  return (\n    <main>\n      <section>\n        <form className=\"w-2/4 mx-auto mt-10\" onSubmit={handleSubmit}>\n          <input\n            className=\"block w-full my-3 py-2 px-3 border border-gray-400 rounded-md\"\n            type=\"text\"\n            placeholder=\"Enter Title\"\n            value={state.title}\n            name=\"title\"\n            onChange={(e) => handleChange(e)}\n          ></input>\n          <input\n            className=\"block w-full my-3 py-2 px-3 border border-gray-400 rounded-md\"\n            type=\"text\"\n            placeholder=\"Enter Description\"\n            value={state.description}\n            name=\"description\"\n            onChange={(e) => handleChange(e)}\n          ></input>\n          <input\n            className=\"block w-full my-3 py-2 px-3 border border-gray-400 rounded-md\"\n            type=\"text\"\n            placeholder=\"Enter Tags\"\n            value={state.tags}\n            name=\"tags\"\n            onChange={(e) => handleChange(e)}\n          ></input>\n          <MdEditor\n            style={{ height: '500px' }}\n            renderHTML={(text) => mdParser.render(text)}\n            onChange={handleEditorChange}\n            onSubmit={clearEditor}\n          />\n          <input\n            type=\"submit\"\n            value=\"Publish Article\"\n            className=\"block float-right btn bg-green-500 text-white font-bold cursor-pointer mt-10\"\n          />\n        </form>\n      </section>\n    </main>\n  );\n}\nexport default withRouter(NewArticle);\n"]},"metadata":{},"sourceType":"module"}